pipeline {
  agent any

  environment {
    GIT_REPO = "https://github.com/DevByShrirang/EC2_using_helm_chart_for_mutiple_env.git"
    APP_NAME = "ec2-helm-lab"
    AWS_REGION = "us-east-2"
  }

  stages {

    // ------------------------- CHECKOUT ------------------------- //
    stage('Checkout Repository') {
      steps {
        echo "üîπ Cloning Helm chart repository..."
        git branch: 'main', url: "${GIT_REPO}"
      }
    }

    // ------------------------- DEV ------------------------- //
    stage('Deploy to Dev') {
      steps {
        dir("${APP_NAME}") {
          echo "üöÄ Rendering Helm templates for DEV environment..."
          sh """
            helm template ${APP_NAME}-dev ./ -f values-dev.yaml > rendered-dev.yaml
            echo '‚úÖ DEV environment simulated deployment complete'
            cat rendered-dev.yaml
          """
        }
      }
    }

    stage('Create EC2 for Dev') {
      steps {
        dir("${APP_NAME}") {
          echo "‚öôÔ∏è Creating EC2 instance for DEV..."
          sh '''
            # Extract EC2 command from Helm-rendered YAML
            grep "aws ec2 run-instances" rendered-dev.yaml | sed "s/^.*aws/aws/" > launch-dev.sh
            chmod +x launch-dev.sh

            # Check if script has content before executing
            if [ ! -s launch-dev.sh ]; then
              echo "‚ö†Ô∏è No EC2 creation command found in rendered-dev.yaml ‚Äî skipping EC2 creation."
            else
              echo "üîπ Launching EC2 instance..."
              ./launch-dev.sh || echo "‚ö†Ô∏è EC2 creation failed ‚Äî please check AWS credentials or parameters."
            fi
          '''
        }
      }
    }

    // ------------------------- STAGE ------------------------- //
    stage('Approval for Stage') {
      steps {
        timeout(time: 15, unit: 'MINUTES') {
          input message: "üü° Approve promotion from DEV ‚Üí STAGE?"
        }
      }
    }

    stage('Deploy to Stage') {
      steps {
        dir("${APP_NAME}") {
          echo "üöÄ Rendering Helm templates for STAGE environment..."
          sh """
            helm template ${APP_NAME}-stage ./ -f values-stage.yaml > rendered-stage.yaml
            echo '‚úÖ STAGE environment simulated deployment complete'
            cat rendered-stage.yaml
          """
        }
      }
    }

    stage('Create EC2 for Stage') {
      steps {
        dir("${APP_NAME}") {
          echo "‚öôÔ∏è Creating EC2 instance for STAGE..."
          sh '''
            grep "aws ec2 run-instances" rendered-stage.yaml | sed "s/^.*aws/aws/" > launch-stage.sh
            chmod +x launch-stage.sh

            if [ ! -s launch-stage.sh ]; then
              echo "‚ö†Ô∏è No EC2 creation command found in rendered-stage.yaml ‚Äî skipping EC2 creation."
            else
              echo "üîπ Launching EC2 instance..."
              ./launch-stage.sh || echo "‚ö†Ô∏è EC2 creation failed ‚Äî please check AWS credentials or parameters."
            fi
          '''
        }
      }
    }

    // ------------------------- PROD ------------------------- //
    stage('Approval for Prod') {
      steps {
        timeout(time: 15, unit: 'MINUTES') {
          input message: "üî¥ Approve promotion from STAGE ‚Üí PROD?"
        }
      }
    }

    stage('Deploy to Prod') {
      steps {
        dir("${APP_NAME}") {
          echo "üöÄ Rendering Helm templates for PROD environment..."
          sh """
            helm template ${APP_NAME}-prod ./ -f values-prod.yaml > rendered-prod.yaml
            echo '‚úÖ PROD environment simulated deployment complete'
            cat rendered-prod.yaml
          """
        }
      }
    }

    stage('Create EC2 for Prod') {
      steps {
        dir("${APP_NAME}") {
          echo "‚öôÔ∏è Creating EC2 instance for PROD..."
          sh '''
            grep "aws ec2 run-instances" rendered-prod.yaml | sed "s/^.*aws/aws/" > launch-prod.sh
            chmod +x launch-prod.sh

            if [ ! -s launch-prod.sh ]; then
              echo "‚ö†Ô∏è No EC2 creation command found in rendered-prod.yaml ‚Äî skipping EC2 creation."
            else
              echo "üîπ Launching EC2 instance..."
              ./launch-prod.sh || echo "‚ö†Ô∏è EC2 creation failed ‚Äî please check AWS credentials or parameters."
            fi
          '''
        }
      }
    }
  }

  // ------------------------- POST ACTIONS ------------------------- //
  post {
    success {
      echo "üéØ All environments promoted successfully and EC2s created where applicable!"
    }
    failure {
      echo "‚ùå Promotion failed. Please check the previous stage logs for detail
